/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2023 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

// registers
#define RCC_Base    0x40021000
#define PortA_Base  0x40010800

#define Set_bit(reg,bit)     (reg|=(1<<bit))
#define Clear_bit(reg,bit)   (reg&=~(1<<bit))

#define RCC_APB2ENR  *((volatile int*)(RCC_Base+0x18))
#define GPIOA_CRH    *((volatile int*)(PortA_Base+0x04))
#define GPIOA_ODR    *((volatile int*)(PortA_Base+0x0c))

// Clock configuration register
#define RCC_CFGR     *((volatile int*)(RCC_Base+0x04))

#define RCC_CR       *((volatile int*)(RCC_Base+0x00))

void Clock_init(){


	/*
		 *  Bits 1:0 SW: System clock switch
	 	 	 Set and cleared by software to select SYSCLK source.
	 	 	 Set by hardware to force HSI selection when leaving Stop and Standby mode or in case of
			failure of the HSE oscillator used directly or indirectly as system clock (if the Clock Security
			System is enabled).
	 	 	 00: HSI selected as system clock
	 	 	 01: HSE selected as system clock
	 	 	 10: PLL selected as system clock
	 	 	 11: not allowed
		 *
		 * */


		RCC_CFGR |=(0b10<<0);



	// enable PLL

	/*
	 *  Bit 24 PLLON: PLL enable
	 Set and cleared by software to enable PLL.
	 Cleared by hardware when entering Stop or Standby mode. This bit can not be reset if the
	PLL clock is used as system clock or is selected to become the system clock.
	 0: PLL OFF
	 1: PLL ON
	 */
	RCC_CR |=(1<<24);

	// PLL source

	/*
	 *
	 * Bit 16 PLLSRC: PLL entry clock source
	 Set and cleared by software to select PLL clock source. This bit can be written only when
	PLL is disabled.
	 0: HSI oscillator clock / 2 selected as PLL input clock
	 1: HSE oscillator clock selected as PLL input clock
	 *
	 * */

	RCC_CFGR |=(0<<16);

	/*
			 * Bits 21:18 PLLMUL: PLL multiplication factor
			 These bits are written by software to define the PLL multiplication factor. These bits can be
			written only when PLL is disabled.
			Caution: The PLL output frequency must not exceed 72MHz.
			 0000: PLL input clock x 2
			 0001: PLL input clock x 3
			 0010: PLL input clock x 4
			 0011: PLL input clock x 5
			 0100: PLL input clock x 6
			 0101: PLL input clock x 7
			 0110: PLL input clock x 8
			 0111: PLL input clock x 9
			 1000: PLL input clock x 10
			 1001: PLL input clock x 11
			 1010: PLL input clock x 12
			 1011: PLL input clock x 13
			 1100: PLL input clock x 14
			 1101: PLL input clock x 15
			 1110: PLL input clock x 16
			 1111: PLL input clock x 16
			 *
			 * */

			RCC_CFGR |=(0b0110<<18);

	/*
	 *
	 * Bits 7:4 HPRE: AHB prescaler
 	 Set and cleared by software to control the division factor of the AHB clock.
 	 0xxx: SYSCLK not divided
 	 1000: SYSCLK divided by 2
 	 1001: SYSCLK divided by 4
 	 1010: SYSCLK divided by 8
 	 1011: SYSCLK divided by 16
 	 1100: SYSCLK divided by 64
 	 1101: SYSCLK divided by 128
 	 1110: SYSCLK divided by 256
 	 1111: SYSCLK divided by 512
	 *
	 * */

	RCC_CFGR |=(0b0000<<4);


	/*
	 *
	 * Bits 13:11 PPRE2: APB high-speed prescaler (APB2)
 	 Set and cleared by software to control the division factor of the APB high-speed clock
	(PCLK2).
 	 0xx: HCLK not divided
 	 100: HCLK divided by 2
	 101: HCLK divided by 4
	 110: HCLK divided by 8
	 111: HCLK divided by 16
	 *
	 *
	 * */
	RCC_CFGR |=(0b101<<11);

	/*
	 *
	 * Bits 10:8 PPRE1: APB low-speed prescaler (APB1)
	 Set and cleared by software to control the division factor of the APB low-speed clock
	(PCLK1).
	 Warning: the software has to set correctly these bits to not exceed 36 MHz on this domain.
	 0xx: HCLK not divided
	 100: HCLK divided by 2
	 101: HCLK divided by 4
	 110: HCLK divided by 8
	 111: HCLK divided by 16
	 * */

	RCC_CFGR |=(0b100<<8);


}

int main(void)
{
	Clock_init();
	// write on registers
	RCC_APB2ENR |=1<<2; // set the clock
	GPIOA_CRH&=0xff0fffff; // clear bits from bit 20 to 24
	GPIOA_CRH|=0x00200000;// set 2 on bits from bit 20 to 24


    while(1){

    	Set_bit(GPIOA_ODR,13); // set bit 13
    	for(int i=0;i<5000;i++); // delay 5 ms
    	Clear_bit(GPIOA_ODR,13); // clear bit 13
    	for(int i=0;i<5000;i++); // delay 5 ms

    }
    return 0;
}
